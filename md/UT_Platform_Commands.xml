<?xml version="1.0" encoding="UTF-8"?>
<mdscript xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="UT_Platform_Commands" xsi:noNamespaceSchemaLocation="http://utnas/~unitrader/XRebirthxsds/md.xsd">
  <cues>
    <cue name="TEST_SHIP">
      <conditions>
        <event_player_cycled_weapons comment="just something random to avoid the 'nonevent condition'-Error"/>
        <check_value value="false" comment="Cue deactivated :P just for me for Testing :P"/>
      </conditions>
      <actions>
        <create_ship name="$ship" macro="macro.units_size_xl_capital_destroyer_2_macro" zone="player.zone">
          <owner exact="faction.player"/>
          <pilot macro="character_split_m_a_macro">
            <owner exact="faction.player"/>
            <skills>
              <skill type="boarding" exact="5"/>
              <skill type="combat" exact="5"/>
              <skill type="engineering" exact="5"/>
              <skill type="leadership" exact="5"/>
              <skill type="management" exact="5"/>
              <skill type="morale" exact="5"/>
              <skill type="navigation" exact="5"/>
              <skill type="science" exact="5"/>
            </skills>
          </pilot>
          <engineer macro="character_split_m_a_macro">
            <owner exact="faction.player"/>
            <skills>
              <skill type="boarding" exact="5"/>
              <skill type="combat" exact="5"/>
              <skill type="engineering" exact="5"/>
              <skill type="leadership" exact="5"/>
              <skill type="management" exact="5"/>
              <skill type="morale" exact="5"/>
              <skill type="navigation" exact="5"/>
              <skill type="science" exact="5"/>
            </skills>
          </engineer>
          <defence macro="character_split_m_a_macro">
            <owner exact="faction.player"/>
            <skills>
              <skill type="boarding" exact="5"/>
              <skill type="combat" exact="5"/>
              <skill type="engineering" exact="5"/>
              <skill type="leadership" exact="5"/>
              <skill type="management" exact="5"/>
              <skill type="morale" exact="5"/>
              <skill type="navigation" exact="5"/>
              <skill type="science" exact="5"/>
            </skills>
          </defence>
          <cargo>
            <wares list="[ware.fuelcells]">
              <fillpercent exact="100"/>
            </wares>
          </cargo>
          <orientation orientation="look_at" refposition="position.[0m,0m,0m]"/>
          <safepos x="0m" y="0m" z="-10km" radius="2km"/>
        </create_ship>
        <add_to_player_squad object="$ship"/>
      </actions>
    </cue>
    <cue name="Ship_Docked">
      <conditions>
        <event_object_changed_room object="player.entity"/>
        <check_value value="player.entity.container.isclass.ship and player.controlled != player.primaryship and player.entity.container.owner == faction.player"/>
      </conditions>
      <actions>
        <reset_cue cue="Player_Undocked"/>
      </actions>
      <cues>
        <cue name="Ship_On_Hotkey_Press" instantiate="true">
          <conditions>
            <event_cue_signalled cue="this"/>
          </conditions>
          <actions>
            <start_conversation actor="player.computer" conversation="Ship_Action_Conversation"/>
          </actions>
        </cue>
        <cue name="Ship_Action_Conservation" instantiate="true">
          <conditions>
            <check_any>
              <event_player_changed_target/>
              <event_conversation_started conversation="Ship_Action_Conversation"/>
              <event_conversation_next_section sectionprefix="PC_"/>
            </check_any>
          </conditions>
          <actions>
            <!-- Player set Target via Map or Guidiance Menu - no need to search for possible Targets, just present Actions available for this Object -->
            <do_if value="event.name == 'event_player_changed_target'">
              <set_value name="$Objects" exact="[event.param]"/>
              <set_value name="$Zones" exact="[]" comment="Menu part expects a $Zones variable, but no content needed"/>
            </do_if>
            <do_elseif value="event.param == 'PC_Selected_Object'">
              <!-- in case the Player selected a space as Target -->
              <do_if value="event.param2.isclass.zone or event.param2.isclass.sector or event.param2.isclass.cluster">
                <set_value name="$Zones" exact="[event.param2]"/>
                <set_value name="$Objects" exact="[]" comment="Menu part expects a $Objects variable, but no content needed"/>
              </do_if>
              <do_else>
                <set_value name="$Objects" exact="[event.param2]"/>
                <set_value name="$Zones" exact="[]" comment="Menu part expects a $Zones variable, but no content needed"/>
              </do_else>
            </do_elseif>
            <do_elseif value="event.name =='event_conversation_started'">
              <!--========================================-->
              <!--=========== Find possible Targets ===========-->
              <!--========================================-->
              <!-- Sector/Zone Targets - note: Clusters may be Added by Object Search for Gates in the next part, too-->
              <find_zone name="$Zones" space="player.sector" multiple="true" known="true" tempzone="false" priorityzone="true">
                <match_is_in_view_of object="player.entity" vertical="20deg" horizontal="20deg"/>
              </find_zone>
              <find_sector name="$Sectors" space="player.cluster" multiple="true" known="true">
                <match_is_in_view_of object="player.entity" vertical="25deg" horizontal="25deg"/>
              </find_sector>
              <!-- merge Zones and Sectors List - both shouldnt be too full -->
              <do_all exact="$Sectors.count" counter="$i">
                <append_to_list name="$Zones" exact="$Sectors.{$i}"/>
              </do_all>
              <!-- remove Player Zone and Cluster in case he got it by chance -->
              <do_if value="$Zones.indexof.{player.zone}">
                <remove_value name="$Zones.{$Zones.indexof.{player.zone}}"/>
              </do_if>
              <do_if value="$Zones.indexof.{player.sector}">
                <remove_value name="$Zones.{$Zones.indexof.{player.sector}}"/>
              </do_if>
              <!--========================================-->
              <!-- Get Zone Objects in the view of the Player (everything except Stations)-->
              <find_object name="$Objects" space="player.zone" multiple="true">
                <match_is_in_view_of object="player.entity" vertical="5deg" horizontal="5deg"/>
                <match_distance object="player.ship" max="player.ship.maxradarrange"/>
                <match class="class.station" negate="true"/>
              </find_object>
              <!-- Fallback for Stations: Find Object with a huge Angle because -->
                <find_object name="$Stations" space="player.zone" multiple="true" class="class.station">
                  <match_is_in_view_of object="player.entity" vertical="25deg" horizontal="25deg"/>
                </find_object>
                <do_all exact="$Stations.count" counter="$i">
                  <append_to_list name="$Objects" exact="$Stations.{$i}"/>
                </do_all>
              <!-- Code Snippet to add Sub-Components to the Target List - under Consideration
                <find_object_component name="$components" class="class.destructible" multiple="true" object="$Objects.{$Objects.count}" comment="Last Object in the List because it must have been added by the previous Loop"/>
                <do_all exact="$components.count" counter="$i">
                  <check_line_of_sight name="$result" object="player.entity" target="$components.{$i}"/>
                  <do_if value="$result">
                    <append_to_list name="$Objects" exact="$components.{$i}"/>
                  </do_if>
                </do_all>-->
              <!-- exclude current Player Object -->
              <do_if value="$Objects.indexof.{player.entity.container}">
                <remove_value name="$Objects.{$Objects.indexof.{player.entity.container}}"/>
              </do_if>
            </do_elseif>
            <!-- Player Choices for either directly Selected Objects or the ones found via directional Search -->
            <do_if value="event.name =='event_player_changed_target' or event.name == 'event_conversation_started' or event.param == 'PC_Selected_Object'">
              <!-- Sort found Objects into categories -->
              <create_list name="$Enemies"/>
              <create_list name="$Moveables"/>
              <create_list name="$Unmoveables"/>
              <do_all exact="$Objects.count" counter="$i">
                <!-- Enemy Objects (Attack) -->
                <do_if value="$Objects.{$i}.hasrelation.enemy.{faction.player}">
                  <!-- insert Big Objects first into the List so small flys are at the End and possibly omitted from the Selection -->
                  <do_if value="$Objects.{$i}.isclass.station or $Objects.{$i}.isclass.ship_xl or $Objects.{$i}.isclass.ship_l">
                    <set_value name="$Enemies.{1}" operation="insert" exact="$Objects.{$i}"/>
                  </do_if>
                  <do_else>
                    <append_to_list name="$Enemies" exact="$Objects.{$i}"/>
                  </do_else>
                </do_if>
                <!-- Ships (Follow) -->
                <do_if value="$Objects.{$i}.isclass.ship">
                  <!-- insert Big Objects first into the List so small flys are at the End and possibly omitted from the Selection -->
                  <do_if value="$Objects.{$i}.isclass.ship_xl or $Objects.{$i}.isclass.ship_l">
                    <set_value name="$Moveables.{1}" operation="insert" exact="$Objects.{$i}"/>
                  </do_if>
                  <do_else>
                    <append_to_list name="$Moveables" exact="$Objects.{$i}"/>
                  </do_else>
                </do_if>
                <!-- Stations -->
                <do_if value="$Objects.{$i}.isclass.station">
                  <append_to_list name="$Unmoveables" exact="$Objects.{$i}"/>
                </do_if>
                <!-- in case of a Gate add its Destination Zone to the Zone List instead of sorting it somewhere else (except for Inactive Gates) -->
                <do_if value="$Objects.{$i}.isclass.gate and $Objects.{$i}.destination.exists">
                  <append_to_list name="$Zones" exact="$Objects.{$i}.destination"/>
                </do_if>
              </do_all>
              <!--========================================-->
              <!-- Save Direction the Player looks to for Move to Pos-Command-->
              <set_value name="$PlayerDirection" exact="[ player.entity.rotation , player.ship.rotation ]"/>
              <!--========================================-->
              <!-- Create Possible Interactions Menu from Targets -->
              <!--========================================-->
              <!-- Follow Target -->
              <do_if value="$Moveables.count == 1">
                <add_player_choice position="1" text="{5554102,31}.[(($Moveables.{1}.distanceto.{player.ship})/1000)i,$Moveables.{1}.name]" section="PC_Move_Follow_selected" choiceparam="$Moveables.{1}"/>
              </do_if>
              <do_else>
                <add_player_choice position="1" text="{5554102,1}.[$Moveables.count]" section="PC_Move_Follow" choiceparam="$Moveables" selectable="$Moveables.count"/>
              </do_else>
              <!-- Advanced Commands -->
              <add_player_choice position="2" text="{5554102,2}.[$Objects.count + $Zones.count]" section="PC_Advanced"/>
              <!-- Option for Attacking Enemies - when no Enemies are in sight add Objects instead -->
              <do_if value="$Enemies.count == 1">
                <add_player_choice position="3" text="{5554102,33}.[(($Enemies.{1}.distanceto.{player.ship})/1000)i,$Enemies.{1}.name]" section="PC_Move_Attack_selected" choiceparam="$Enemies.{1}" selectable="player.ship.dps.all" comment="only for Ships which are armed"/>
              </do_if>
              <do_elseif value="$Enemies.count == 0 and $Objects.count ge 1">
                <add_player_choice position="3" text="{5554102,7}.[$Objects.count]" section="PC_Move_Attack_friendlies" choiceparam="$Objects" selectable="player.ship.dps.all" comment="only for Ships which are armed"/>
              </do_elseif>
              <do_else>
                <add_player_choice position="3" text="{5554102,3}.[$Enemies.count]" section="PC_Move_Attack" choiceparam="$Enemies" selectable="$Enemies.count and player.ship.dps.all" comment="only for Ships which are armed"/>
              </do_else>
              <!-- Option for Fly to Zone-Command -->
              <do_if value="$Zones.count == 1">
                <do_if value="$Zones.{1}.distanceto.{player.ship} ge 1000000m">
                  <add_player_choice position="4" text="{5554102,40}.[(($Zones.{1}.distanceto.{player.ship})/1000000)i,$Zones.{1}.name]" section="PC_Move_FlyTo_selected" choiceparam="$Zones.{1}"/>
                </do_if>
                <do_else>
                  <add_player_choice position="4" text="{5554102,38}.[(($Zones.{1}.distanceto.{player.ship})/1000)i,$Zones.{1}.name]" section="PC_Move_FlyTo_selected" choiceparam="$Zones.{1}"/>
                </do_else>
              </do_if>
              <do_else>
                <add_player_choice position="4" text="{5554102,4}.[$Zones.count]" section="PC_Move_FlyTo" choiceparam="$Zones" selectable="$Zones.count"/>
              </do_else>
              <!-- Option for Fly to (unmoveable) Object -->
              <do_if value="$Unmoveables.count == 1">
                <add_player_choice position="5" text="{5554102,38}.[(($Unmoveables.{1}.distanceto.{player.ship})/1000)i,$Unmoveables.{1}.name]" section="PC_Move_FlyTo_selected" choiceparam="$Unmoveables.{1}"/>
              </do_if>
              <do_else>
                <add_player_choice position="5" text="{5554102,5}.[$Unmoveables.count]" section="PC_Move_FlyTo" choiceparam="$Unmoveables" selectable="$Unmoveables.count"/>
              </do_else>
              <!-- Fly in specified Direction -->
              <do_if value="true" comment="Move Ship; Rotate Commands WiP">
                <!-- player.entity.rotation.pitch gt -45deg -->
                <!-- and -180 lt player.entitiy.rotation.yaw lt 180 -->
                <add_player_choice position="6" text="{5554102,6}" section="PC_Move_FlyToPos" choiceparam="$PlayerDirection"/>
              </do_if>
              <do_else comment="player.entity.rotation.pitch gt 45deg">
                <add_player_choice position="6" text="'Do a Barrel Roll'" section="PC_Move_BarrelRoll"/>
              </do_else>
              <!--do_else comment="Turn Ship Around">
                <add_player_choice position="6" text="'Turn Ship around'" section="PC_Move_TurnAround"/>
              </do_else-->
              <add_player_choice position="close" text="'Exit'" section="PC_Exit"/>
            </do_if>
            <!-- Follow Target -->
            <do_elseif value="event.param == 'PC_Move_Follow_selected'">
              <cancel_conversation/>
              <include_actions ref="md.Orders.StopCurrentTask"/>
              <signal_objects object="player.ship" param="'follow'" param2="event.param2" delay="100ms"/>
              <speak actor="player.ship.pilot" line="[1012,1013,1018,1019].random" comment="generic confirmation" />
            </do_elseif>
            <do_elseif value="event.param == 'PC_Move_Follow'">
              <do_all exact="[event.param2.count,6].min" counter="$i">
                <add_player_choice position="$i" text="{5554102,31}.[((event.param2.{$i}.distanceto.{player.ship})/1000)i,event.param2.{$i}.name]" section="PC_Move_Follow_selected" choiceparam="event.param2.{$i}"/>
              </do_all>
              <add_player_choice position="6" text="'Exit'" section="PC_Exit"/>
              <add_player_choice position="close" text="'Exit'" section="PC_Exit"/>
            </do_elseif>
            <!-- Advanced Commands (Independent of Target -->
            <do_elseif value="event.param == 'PC_Advanced'">
              <add_player_choice position="1" text="{5554102,11}" section="PC_Hold_Position"/>
              <add_player_choice position="2" text="{5554102,12}" section="PC_Follow_me"/>
              <add_player_choice position="3" text="{5554102,13}" section="PC_Withdraw"/>
              <add_player_choice position="4" text="{5554102,14}" section="PC_Patrol Zone" selectable="player.ship.dps.all" comment="only for Ships which are armed"/>
            </do_elseif>
            <do_elseif value="event.param == 'PC_Hold_Position'">
              <cancel_conversation/>
              <include_actions ref="md.Orders.StopCurrentTask"/>
              <signal_objects object="player.ship" param="'hold position'" delay="100ms" />
              <speak actor="player.ship.pilot" line="[1012,1013,1018,1019,1017,1017].random" comment="confirmation hold pos" />
            </do_elseif>
            <do_elseif value="event.param == 'PC_Follow_me'">
              <cancel_conversation/>
              <include_actions ref="md.Orders.StopCurrentTask"/>
              <speak actor="player.ship.pilot" line="[1012,1013,1018,1019,1031,1031,2102,2102,1017,1017].random" comment="confirmation follow me" />
            </do_elseif>
            <do_elseif value="event.param == 'PC_Withdraw'">
              <cancel_conversation/>
              <include_actions ref="md.Orders.StopCurrentTask"/>
              <signal_objects object="player.ship" param="'withdraw battle'" delay="100ms" />
              <speak actor="player.ship.pilot" line="[1012,1013,1018,1019,1057,1057].random" comment="confirmation withdraw" />
            </do_elseif>
            <do_elseif value="event.param == 'PC_Patrol_Zone'">
              <cancel_conversation/>
              <include_actions ref="md.Orders.StopCurrentTask"/>
              <!-- param2 = zone, param3 = timeout -->
              <signal_objects object="player.ship" param="'attack enemies'" param2="player.ship.zone" param3="null" delay="100ms" />
              <speak actor="player.ship.pilot" line="[1012,1013,1018,1019,1045,1045].random" comment="confirmation patrol" />
            </do_elseif>
            <!-- Attack Target -->
            <do_elseif value="event.param == 'PC_Move_Attack_selected'">
              <cancel_conversation/>
              <include_actions ref="md.Orders.StopCurrentTask"/>
              <signal_objects object="player.ship" param="'attack object'" param2="event.param2" delay="100ms"/>
              <speak actor="player.ship.pilot" line="[1012,1013,1018,1019].random" comment="generic confirmation" />
            </do_elseif>
            <do_elseif value="event.param == 'PC_Move_Attack'">
              <do_all exact="[event.param2.count,6].min" counter="$i">
                <add_player_choice position="$i" text="{5554102,33}.[((event.param2.{$i}.distanceto.{player.ship})/1000)i,event.param2.{$i}.name]" section="PC_Move_Attack_selected" choiceparam="event.param2.{$i}"/>
              </do_all>
              <add_player_choice position="6" text="'Exit'" section="PC_Exit"/>
              <add_player_choice position="close" text="'Exit'" section="PC_Exit"/>
            </do_elseif>
            <do_elseif value="event.param == 'PC_Move_Attack_friendlies'">
              <add_npc_line speaker="player.computer" line="5000" hidechoices="false" comment="Attention! Target is not hostile."/>
              <do_all exact="[event.param2.count,6].min" counter="$i">
                <add_player_choice position="$i" text="{5554102,35}.[((event.param2.{$i}.distanceto.{player.ship})/1000)i,event.param2.{$i}.name]" section="PC_Move_Attack_selected" choiceparam="event.param2.{$i}"/>
              </do_all>
              <add_player_choice position="6" text="'Exit'" section="PC_Exit"/>
              <add_player_choice position="close" text="'Exit'" section="PC_Exit"/>
            </do_elseif>
            <!-- Fly to Target -->
            <do_elseif value="event.param == 'PC_Move_FlyTo_selected'">
              <cancel_conversation/>
              <include_actions ref="md.Orders.StopCurrentTask"/>
              <signal_objects object="player.ship" param="'fly to'" param2="event.param2" delay="100ms"/>
              <speak actor="player.ship.pilot" line="[1012,1013,1018,1019,1032,1032,1081,1081].random" comment="confirmation move to" />
            </do_elseif>
            <do_elseif value="event.param == 'PC_Move_FlyTo'">
              <do_all exact="[event.param2.count,6].min" counter="$i">
                <do_if value="event.param2.{$i}.distanceto.{player.ship} ge 1000000m">
                  <add_player_choice position="$i" text="{5554102,39}.[((event.param2.{$i}.distanceto.{player.ship})/1000000)i,event.param2.{$i}.name]" section="PC_Move_FlyTo_selected" choiceparam="event.param2.{$i}"/>
                </do_if>
                <do_else>
                  <add_player_choice position="$i" text="{5554102,37}.[((event.param2.{$i}.distanceto.{player.ship})/1000)i,event.param2.{$i}.name]" section="PC_Move_FlyTo_selected" choiceparam="event.param2.{$i}"/>
                </do_else>
              </do_all>
              <add_player_choice position="6" text="'Exit'" section="PC_Exit"/>
              <add_player_choice position="close" text="'Exit'" section="PC_Exit"/>
            </do_elseif>
            <!-- Fly to Position / Rotate Ship -->
            <do_elseif value="event.param == 'PC_Move_FlyToPos'">
              <set_value name="$DistanceList" exact="[-5km,5km,15km,50km,150km,500km]"/>
              <do_all exact="$DistanceList.count" counter="$i">
                <!-- first calculate the Target Pos relative to the Ship in its Coordinate System, then apply Ship Rotation to it to get the Zone Position -->
                <transform_position name="$Position" refposition="position.[0,0,0]" refrotation="event.param2.{1}">
                  <position x="0m" y="0m" z="$DistanceList.{$i}"/>
                </transform_position>
                <transform_position name="$Position" refposition="player.ship.position" refrotation="event.param2.{2}">
                  <position value="$Position"/>
                </transform_position>
                <add_player_choice position="$i" text="{5554102,43}.[($DistanceList.{$i}/1000)i]" section="PC_Move_FlyToPos_selected" choiceparam="$Position"/>
              </do_all>
              <add_player_choice position="close" text="'Exit'" section="PC_Exit"/>
            </do_elseif>
            <do_elseif value="event.param == 'PC_Move_FlyToPos_selected'">
              <cancel_conversation/>
              <include_actions ref="md.Orders.StopCurrentTask"/>
              <signal_objects object="player.ship" param="'fly to pos'" param2="event.param2"/>
              <speak actor="player.ship.pilot" line="[1012,1013,1018,1019,1032,1032].random" comment="confirmation move to pos" />
            </do_elseif>
            <do_elseif value="event.param == 'PC_Move_BarrelRoll'">
              <include_actions ref="md.Orders.StopCurrentTask"/>
              <transform_position name="$Position" refposition="player.ship.position" refrotation="player.ship.rotation">
                <position x="0m" y="0m" z="500m"/>
              </transform_position>
              <create_rotation name="$Rotation" yaw="player.ship.rotation.yaw" pitch="player.ship.rotation.pitch" roll="player.ship.rotation.roll+180deg"/>
              <signal_objects object="player.ship" param="'fly to pos'" param2="$Position" param3="$Rotation" delay="100ms"/>
            </do_elseif>
            <do_elseif value="event.param == 'PC_Move_TurnAround'">
              <include_actions ref="md.Orders.StopCurrentTask"/>
              <signal_objects object="player.ship" param="'rotate'" param2="rotation.[player.ship.rotation.yaw+180deg,player.ship.rotation.pitch,player.ship.rotation.roll]" delay="100ms"/>
            </do_elseif>
            <!-- Exit Condition - always bound to Escape Conversation-Key (and Item 6 if not already used otherwise)-->
            <do_elseif value="event.param == 'PC_Exit'">
              <cancel_conversation/>
            </do_elseif>
          </actions>
        </cue>
      </cues>
    </cue>
    <cue name="Player_Undocked" comment="Player Undocked: stop Platform Scripts and reset cue for player wait until docked again">
      <conditions>
        <event_object_changed_room object="player.entity"/>
        <check_value exact="player.entity.container" value="player.primaryship" comment="Only if player is on his ship"/>
      </conditions>
      <actions>
        <reset_cue cue="Ship_Docked"/>
      </actions>
    </cue>
  </cues>
</mdscript>
